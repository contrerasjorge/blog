{"ast":null,"code":"import _ from \"lodash\";\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts()); // what the chain is doning below\n  // const userIds = _.uniq(_.map(getState().posts, \"userId\"));\n  // userIds.forEach(id => dispatch(fetchUser(id)));\n\n  _.chain(getState().posts).map(\"userId\").uniq().forEach(id => dispatch(fetchUser(id))).value();\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get(\"/posts\");\n  dispatch({\n    type: \"FETCH_POSTS\",\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(\"/users/\".concat(id));\n  dispatch({\n    type: \"FETCH_USER\",\n    payload: response.data\n  });\n}; // export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n// \tconst response = await jsonPlaceholder.get(`/users/${id}`);\n// \tdispatch({ type: \"FETCH_USER\", payload: response.data });\n// });","map":{"version":3,"sources":["/Users/contrerasjorge/projects/blog/src/actions/index.js"],"names":["_","jsonPlaceholder","fetchPostsAndUsers","dispatch","getState","fetchPosts","chain","posts","map","uniq","forEach","id","fetchUser","value","response","get","type","payload","data"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACrE,QAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd,CADqE,CAGrE;AACA;AACA;;AAEAL,EAAAA,CAAC,CAACM,KAAF,CAAQF,QAAQ,GAAGG,KAAnB,EACEC,GADF,CACM,QADN,EAEEC,IAFF,GAGEC,OAHF,CAGUC,EAAE,IAAIR,QAAQ,CAACS,SAAS,CAACD,EAAD,CAAV,CAHxB,EAIEE,KAJF;AAKA,CAZM;AAcP,OAAO,MAAMR,UAAU,GAAG,MAAM,MAAMF,QAAN,IAAkB;AACjD,QAAMW,QAAQ,GAAG,MAAMb,eAAe,CAACc,GAAhB,CAAoB,QAApB,CAAvB;AAEAZ,EAAAA,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMN,SAAS,GAAGD,EAAE,IAAI,MAAMR,QAAN,IAAkB;AAChD,QAAMW,QAAQ,GAAG,MAAMb,eAAe,CAACc,GAAhB,kBAA8BJ,EAA9B,EAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACA,CAJM,C,CAMP;AACA;AACA;AAEA;AACA","sourcesContent":["import _ from \"lodash\";\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n\tawait dispatch(fetchPosts());\n\n\t// what the chain is doning below\n\t// const userIds = _.uniq(_.map(getState().posts, \"userId\"));\n\t// userIds.forEach(id => dispatch(fetchUser(id)));\n\n\t_.chain(getState().posts)\n\t\t.map(\"userId\")\n\t\t.uniq()\n\t\t.forEach(id => dispatch(fetchUser(id)))\n\t\t.value();\n};\n\nexport const fetchPosts = () => async dispatch => {\n\tconst response = await jsonPlaceholder.get(\"/posts\");\n\n\tdispatch({ type: \"FETCH_POSTS\", payload: response.data });\n};\n\nexport const fetchUser = id => async dispatch => {\n\tconst response = await jsonPlaceholder.get(`/users/${id}`);\n\n\tdispatch({ type: \"FETCH_USER\", payload: response.data });\n};\n\n// export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n// \tconst response = await jsonPlaceholder.get(`/users/${id}`);\n\n// \tdispatch({ type: \"FETCH_USER\", payload: response.data });\n// });\n"]},"metadata":{},"sourceType":"module"}