{"ast":null,"code":"import _ from \"lodash\";\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  const userIds = _.uniq(_.map(getState().posts, \"userId\"));\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get(\"/posts\");\n  dispatch({\n    type: \"FETCH_POSTS\",\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(\"/users/\".concat(id));\n  dispatch({\n    type: \"FETCH_USER\",\n    payload: response.data\n  });\n}; // export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n// \tconst response = await jsonPlaceholder.get(`/users/${id}`);\n// \tdispatch({ type: \"FETCH_USER\", payload: response.data });\n// });","map":{"version":3,"sources":["/Users/contrerasjorge/projects/blog/src/actions/index.js"],"names":["_","jsonPlaceholder","fetchPostsAndUsers","dispatch","getState","fetchPosts","userIds","uniq","map","posts","response","get","type","payload","data","fetchUser","id"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACrE,QAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd;;AAEA,QAAMC,OAAO,GAAGN,CAAC,CAACO,IAAF,CAAOP,CAAC,CAACQ,GAAF,CAAMJ,QAAQ,GAAGK,KAAjB,EAAwB,QAAxB,CAAP,CAAhB;AACA,CAJM;AAMP,OAAO,MAAMJ,UAAU,GAAG,MAAM,MAAMF,QAAN,IAAkB;AACjD,QAAMO,QAAQ,GAAG,MAAMT,eAAe,CAACU,GAAhB,CAAoB,QAApB,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAGC,EAAE,IAAI,MAAMb,QAAN,IAAkB;AAChD,QAAMO,QAAQ,GAAG,MAAMT,eAAe,CAACU,GAAhB,kBAA8BK,EAA9B,EAAvB;AAEAb,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACA,CAJM,C,CAMP;AACA;AACA;AAEA;AACA","sourcesContent":["import _ from \"lodash\";\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n\tawait dispatch(fetchPosts());\n\n\tconst userIds = _.uniq(_.map(getState().posts, \"userId\"));\n};\n\nexport const fetchPosts = () => async dispatch => {\n\tconst response = await jsonPlaceholder.get(\"/posts\");\n\n\tdispatch({ type: \"FETCH_POSTS\", payload: response.data });\n};\n\nexport const fetchUser = id => async dispatch => {\n\tconst response = await jsonPlaceholder.get(`/users/${id}`);\n\n\tdispatch({ type: \"FETCH_USER\", payload: response.data });\n};\n\n// export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n// \tconst response = await jsonPlaceholder.get(`/users/${id}`);\n\n// \tdispatch({ type: \"FETCH_USER\", payload: response.data });\n// });\n"]},"metadata":{},"sourceType":"module"}